// i18n
import { useTranslation } from 'react-i18next';

// Components
import ModalFrame from '../ModalFrame';
import TemplateContent from './TemplateContent';

function TemplateModal({
  modalData,
  type,
  getTemplateList,
  onClickNewGroup,
  deploymentTypeHandler,
  onClickGroupList,
  onClickGroupSelect,
  onClickDeployTemplateList,
  onClickDeploySelect,
  onClickDeployList,
  onClickGroupTemplateList,
  groupTemplateData,
  deployTemplateData,
  deploymentType,
  makeNewGroup,
  clickedGroupDataList,
  groupSelect,
  clickedGroupTemplateLists,
  clickedDeployTemplateLists,
  clickedDeployDataList,
  setClickedDeployDataList,
  setMakeNewGroup,
  getTemplateListHandler,
  newTemplateName,
  nameInputHandler,
  newTemplateDescription,
  descriptionInputHandler,
  templateNameDuplicate,
  newGroupName,
  newGroupDescription,
  groupNameInputHandler,
  groupDescriptionInputHandler,
  groupNameDuplicate,
  trainingTypeSelectHandler,
  trainingSortHandler,
  getCustomList,
  variablesSortHandler,
  selectedDeploymentType,
  trainingList,
  trainingInputValue,
  trainingSelectTab,
  jobDetailList,
  jobList,
  originJobList,
  trainingToolTab,
  hpsList,
  originHpsList,
  hpsDetailList,
  hpsLogTable,
  selectedHpsScore,
  selectedHps,
  customLan,
  customFile,
  customParam,
  customList,
  customSearchValue,
  customRuncode,
  selectedTool,
  selectedToolType,
  trainingType,
  ownerOptions,
  selectedTraining,
  hpsDetailOpenList,
  jobDetailOpenList,
  trainingSelectedType,
  trainingSelectedOwner,
  variablesValues,
  getJobList,
  backBtnHandler,
  toolDetailOpenHandler,
  trainingToolTabHandler,
  toolSelectHandler,
  toolSortHandler,
  toolSearchValue,
  toolSelectedOwner,
  runcodeClickHandler,
  validate,
  modelList,
  modelSelectStatus,
  searchModelHandler,
  modelCategorySelect,
  categoryHandler,
  onClickModelList,
  selectedModel,
  modelSelectStatusHanlder,
  jsonDataHandler,
  editStatus,
  jsonData,
  onClickSubmit,
  applyButtonClicked,
  showSelectAgain,
  trainingTypeArrowCustomHandler,
  trainingTypeArrowHandler,
  logClickHandler,
  hpsLogSortHandler,
  hpsModelList,
  jobModelList,
  originHpsModelList,
  originJobModelList,
  selectedLogId,
  toolModelSearchValue,
  hpsModelSelectValue,
  selectedHpsId,
  jobModelSelectValue,
  trainingTypeArrow,
  variableInputHandler,
  toolModelSelectHandler,
  toolModelSortHandler,
  paramsInputHandler,
  variablesDelete,
  hpsLogList,
  variablesAdd,
  customListStatus,
  readOnly,
  templateEditData,
  innerRef,
  jsonDataErrorHandler,
  onClickNoGroup,
  deploymentNoGroupSelected,
  goupOnClickNoGroup,
  templateNogroupSelected,
}) {
  const { t } = useTranslation();
  const { submit, cancel, data, workspaceId } = modalData;
  const newSubmit = {
    text: submit.text,
    func: async () => {
      onClickSubmit();
    },
  };

  return (
    <ModalFrame
      submit={newSubmit}
      cancel={cancel}
      type={type}
      isResize={true}
      isMinimize={true}
      validate={validate}
      title={
        type === 'TEMPLATE_EDIT'
          ? t('template.edit.title.label')
          : t('template.create.title.label')
      }
      headerTitle={
        type === 'TEMPLATE_EDIT'
          ? t('template.edit.title.label')
          : t('template.create.title.label')
      }
    >
      <TemplateContent
        groupData={data.groupData}
        getTemplateList={getTemplateList}
        workspaceId={workspaceId}
        onClickNewGroup={onClickNewGroup}
        deploymentTypeHandler={deploymentTypeHandler}
        onClickGroupList={onClickGroupList}
        onClickGroupSelect={onClickGroupSelect}
        onClickDeployTemplateList={onClickDeployTemplateList}
        onClickDeploySelect={onClickDeploySelect}
        onClickDeployList={onClickDeployList}
        onClickGroupTemplateList={onClickGroupTemplateList}
        groupTemplateData={groupTemplateData}
        deployTemplateData={deployTemplateData}
        deploymentType={deploymentType}
        makeNewGroup={makeNewGroup}
        clickedGroupDataList={clickedGroupDataList}
        groupSelect={groupSelect}
        clickedGroupTemplateLists={clickedGroupTemplateLists}
        clickedDeployTemplateLists={clickedDeployTemplateLists}
        clickedDeployDataList={clickedDeployDataList}
        setClickedDeployDataList={setClickedDeployDataList}
        setMakeNewGroup={setMakeNewGroup}
        getTemplateListHandler={getTemplateListHandler}
        newTemplateName={newTemplateName}
        nameInputHandler={nameInputHandler}
        newTemplateDescription={newTemplateDescription}
        descriptionInputHandler={descriptionInputHandler}
        defaultGroupName={data.defaultGroupName}
        templateNameDuplicate={templateNameDuplicate}
        newGroupName={newGroupName}
        newGroupDescription={newGroupDescription}
        groupNameInputHandler={groupNameInputHandler}
        groupDescriptionInputHandler={groupDescriptionInputHandler}
        groupNameDuplicate={groupNameDuplicate}
        trainingTypeSelectHandler={trainingTypeSelectHandler}
        trainingSortHandler={trainingSortHandler}
        getCustomList={getCustomList}
        variablesSortHandler={variablesSortHandler}
        selectedDeploymentType={selectedDeploymentType}
        trainingList={trainingList}
        trainingInputValue={trainingInputValue}
        trainingSelectTab={trainingSelectTab}
        jobDetailList={jobDetailList}
        jobList={jobList}
        originJobList={originJobList}
        trainingToolTab={trainingToolTab}
        hpsList={hpsList}
        originHpsList={originHpsList}
        hpsDetailList={hpsDetailList}
        hpsLogTable={hpsLogTable}
        selectedHpsScore={selectedHpsScore}
        selectedHps={selectedHps}
        customLan={customLan}
        customFile={customFile}
        customParam={customParam}
        customList={customList}
        customSearchValue={customSearchValue}
        customRuncode={customRuncode}
        selectedTool={selectedTool}
        selectedToolType={selectedToolType}
        toolSelectHandler={toolSelectHandler}
        trainingType={trainingType}
        editStatus={editStatus}
        ownerOptions={ownerOptions}
        selectedTraining={selectedTraining}
        hpsDetailOpenList={hpsDetailOpenList}
        jobDetailOpenList={jobDetailOpenList}
        trainingSelectedType={trainingSelectedType}
        trainingSelectedOwner={trainingSelectedOwner}
        variablesValues={variablesValues}
        getJobList={getJobList}
        backBtnHandler={backBtnHandler}
        toolDetailOpenHandler={toolDetailOpenHandler}
        trainingToolTabHandler={trainingToolTabHandler}
        toolSortHandler={toolSortHandler}
        toolSearchValue={toolSearchValue}
        toolSelectedOwner={toolSelectedOwner}
        runcodeClickHandler={runcodeClickHandler}
        modelList={modelList}
        modelSelectStatus={modelSelectStatus}
        searchModelHandler={searchModelHandler}
        modelCategorySelect={modelCategorySelect}
        categoryHandler={categoryHandler}
        onClickModelList={onClickModelList}
        selectedModel={selectedModel}
        modelSelectStatusHanlder={modelSelectStatusHanlder}
        jsonDataHandler={jsonDataHandler}
        jsonData={jsonData}
        applyButtonClicked={applyButtonClicked}
        showSelectAgain={showSelectAgain}
        trainingTypeArrowCustomHandler={trainingTypeArrowCustomHandler}
        trainingTypeArrowHandler={trainingTypeArrowHandler}
        logClickHandler={logClickHandler}
        hpsLogSortHandler={hpsLogSortHandler}
        hpsModelList={hpsModelList}
        jobModelList={jobModelList}
        originHpsModelList={originHpsModelList}
        originJobModelList={originJobModelList}
        selectedLogId={selectedLogId}
        toolModelSearchValue={toolModelSearchValue}
        hpsModelSelectValue={hpsModelSelectValue}
        selectedHpsId={selectedHpsId}
        jobModelSelectValue={jobModelSelectValue}
        trainingTypeArrow={trainingTypeArrow}
        hpsLogList={hpsLogList}
        variablesAdd={variablesAdd}
        variablesDelete={variablesDelete}
        variableInputHandler={variableInputHandler}
        paramsInputHandler={paramsInputHandler}
        toolModelSelectHandler={toolModelSelectHandler}
        toolModelSortHandler={toolModelSortHandler}
        customListStatus={customListStatus}
        readOnly={readOnly}
        templateEditData={templateEditData}
        innerRef={innerRef}
        jsonDataErrorHandler={jsonDataErrorHandler}
        onClickNoGroup={onClickNoGroup}
        deploymentNoGroupSelected={deploymentNoGroupSelected}
        goupOnClickNoGroup={goupOnClickNoGroup}
        templateNogroupSelected={templateNogroupSelected}
      />
    </ModalFrame>
  );
}
export default TemplateModal;
